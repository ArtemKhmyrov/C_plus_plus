#include <iostream>//библиотека дл€ потока ввода-вывода

using namespace std;//директива

struct queue //создаем структуру
{
	int inf;//переменна€ 
	queue *next;//переменна€ 
};

void push(queue *&h, queue *&t, int x)//оператор войд
{ //¬ставка элемента в очередь
	queue *r = new queue;//выдел€ем пам€ть 
	r->inf = x;
	r->next = NULL; //инициализаци€
	if (!h && !t) //условие если очередь пуста то
		h = t = r; //хвост и голова
	else//условие иначе
	{
		t->next = r; //следующий элемент
		t = r; //приравниваем
	}
}

int pop(queue *&h, queue*&t)//оператор инт
{
	queue *r = h;//приравнивание
	int i = h->inf;//в новую переменную
	h = h->next;//в следующий 
	if (!h)//условие если
		t = NULL;//инициализаци€
	delete r;//удаление
	return i;//завершение
}


int main()//оператор мейн
{
	setlocale(LC_ALL, "RUS");//использование русской клавиатуры
	int x, y, n;//вводим переменные
	cout << "¬ведите размер очереди: ";//вывод
	cin >> n;//ввод
	cout << endl << "¬ведите ’: ";//вывод
	cin >> y;//ввод
	cout << endl;//отступ
	queue *h1, *t1;//вызов
	h1 = t1 = NULL;//инициализаци€
	for (int i = 0; i < n; i++)//цикл
	{
		cin >> x;//ввод
		push(h1, t1, x);//запись
	}
	queue *h2, *t2;//вызов
	h2 = t2 = NULL;//инициализаци€
	while (t1)//цикл пока
	{
		int z = pop(h1, t1);//считывание
		push(h2, t2, z);//запись
		if (z % y == 0)//условие если
			push(h2, t2, 0);//запись
	}
	while (t2)//цикл пока
	
	{
		int z = pop(h2, t2);//считывание
		cout << z << "  ";//вывод
	}
	system("pause");//задержка консоли
	return 0;//оператор 
}
