//дан ориентированный граф, вывести все истоки графа
#include <iostream>//библиотека для потока ввода-вывода 
#include <vector>//библиотека векторов 
#include <queue>//библиотека очередей 

using namespace std;//директива 


void bfs(vector<vector<int>> &Gr, vector<int> &used, int x)// обход в глубину
{
	used[x] = 1; // отмечаем, что вершина посещена
	queue<int>b;//переменная для очереди 
	b.push(x);
	while (!b.empty()) //цикл пока 
	{
		int y = b.front();//переменная 
		b.pop();//стек
		for (int i = 0; i < Gr[y].size(); i++)//цикл 
		{
			if (!used[Gr[y][i]]) //условие если 
			{
				b.push(Gr[y][i]);// вызываем смежные
				used[Gr[y][i]] = 1;//отмечаем вершину 
			}
		}
	}
}

////////в кратце, эта прога отмечает в массиве чек смежные вершины с той, из которой мы входим, а ту, в которую вошли не отмечаем,
////////А потом записываем все фигню в масив чек. В каких ячейках масива ничего не накопилось. Эти ячейки являются истоками



int main()//оператор инт мейн 
{
	setlocale(LC_ALL, "RUS");//использование русской клавиатуры 
	int n, m;//переменные 
	cout << "Количество вершин графа: ";//вывод
	cin >> n;//ввод
	cout << "Количество ребер графа: ";//вывод
	cin >> m;//ввод
	vector <vector<int>> Gr(n);//Вектор 
	vector<int>used(n);//вектор 
	vector<int>check(n);//Вектор
	cout << "Введите пары смежаных вершин  ";//вывод
	int a, b;//переменные 
	for (int i = 0; i < m; i++)//цикл для создания списка смежности
	{
		cin >> a >> b;//ввод
		Gr[a].push_back(b);//создаем список смежности
	}

	for (int i = 0; i < n; i++) //цикл 
	{
		bfs(Gr, used, i); // обход в ширину
		used[i] = 0; // отмечаем вершину, из которой выходили, непосещенной
		for (int j = 0; j < n; j++)//цикл для обхода 
		{
			if (used[j] != 0) check[j]++; // если посетили вершину, отмечаем в массиве check
		}

		for (int k = 0; k < n; k++)//цикл для посещения элементов 
		{
			used[k] = 0;// обнуляем посещения
		}
	}


	for (int i = 0; i < n; i++) // выводим результат
	{
		if (check[i] == 0)//условие если
			cout << i << " ";//вывод
	}

	system("pause");//задержка консоли 
	return 0;//завершение 
}



