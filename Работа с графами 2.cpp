//Дан неориентированный граф. Удалить ребро, соединяющее вершины А и B

#include <iostream>//библиотека для потока ввода - вывода 
#include <vector>//библиотека векторов 
#include <algorithm>//библиотека алгоритмов 

using namespace std;//директива 

int main() //оператор инт мейн
{
	setlocale(LC_ALL, "RUS");//использование русской клавиатуры 

	cout << "Введите количество вершин: ";//ввод
	int n; //переменные 
	cin >> n;//ввод
	vector<vector<int> > Gr(n);//создаем векторное пространство

	cout << "Введите количество ребер: ";//вводим количество ребер
	int m;//переменные 
	cin >> m;//ввод


	cout << "Вводите пары смежных вершин:" << endl;//вывод

	for (int i = 0; i < m; i++)//Цикл 
	{
		int perv, vtor;//переменные 
		cin >> perv >> vtor;//ввод

		Gr[perv].push_back(vtor);//создание списка смежности
	}


	int a, b;
	cout << "Введите вершины, ребро которых надо удалить" << endl;//вывод
	cin >> a >> b;//ввод

	for (int i = 0; i < Gr[a].size(); i++)
	{
		if (Gr[a][i] == b)//если нашли - удалили
		{
			Gr[a].erase(Gr[a].begin() + i);//если нашли - удалили и перешли к следующему 
		}
	}
	for (int i = 0; i < Gr[b].size(); i++)
	{
		if (Gr[b][i] == a)//если нашли - удалили
		{
			Gr[b].erase(Gr[b].begin() + i);//если нашли - удалили и перешли к следующему 
		}
	}

	for (int i = 0; i < n; i++) //вывод полученного списка
	{
		cout << "Вершина " << i << ": ";//вывод
		for (int j = 0; j < Gr[i].size(); j++)//цикл 
			cout << Gr[i][j] << " ";//вывод
		cout << endl;//отступ 
	}

	system("pause");//задержка консоли 
	return 0;//завершение 
}


