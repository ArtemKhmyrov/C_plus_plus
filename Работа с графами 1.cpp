// Дан неориентированный граф. Вывести на экран все вершины, не смежные с данной.
#include<iostream>//библиотека для потока ввода-вывода
#include<cstdlib>//библиотека стд
#include <algorithm>//библиотека алгоритмов 
#include<vector>//библиотека векторов 

using namespace std;//директива 

int main()//оператор инт мейн 
{
	setlocale(LC_ALL, "RUS");//использование русской клавиатуры 
	cout << "Введите количество вершин: ";//вывод
	int n; //переменные 
	cin >> n;//ввод
	vector<vector<int> > Gr(n);//создание векторного пространства 

	cout << "Введите количество ребер: ";//вывод
	int m; //переменная 
	cin >> m;//ввод 

	cout << "Вводите пары смежных вершин:" << endl;//вывод

	for (int i = 0; i < m; i++)//цикл 
	{
		int perv, vtor;//переменные 
		cin >> perv >> vtor;//ввод

		Gr[perv].push_back(vtor);//добавляем новый элемент в конец воследнего
		Gr[vtor].push_back(perv);//добавляем новый элемент в конец воследнего
	}

	vector <bool> check(n, false);//создаем вектор 

	cout << "Введите вершину, для которой хотите найти не смежные вершины: ";//вывод 
	int x; //переменные 
	cin >> x;//ввод
	for (auto it = Gr[x].begin(); it != Gr[x].end(); it++) // идем по списку из вершины, а каждую вершину смежную с ней отмечаем
	{ 
		check[*it] = true;//пока истинно - выполнять 
	}

	for (int i = 0; i < n; i++)  //выводим все неотмеченные вершины
		if (!check[i] && i != x)//условие если не истинно и не равно вершине 
			cout << i << " ";//вывод
	cout << endl;//отступ 

	system("pause");//задержка консоли 
	return 0;//оператор завершения 
}
